
" ##############################
" echom "vimrc.bundle_complex"
" echom g:cur_bundle_file_path
" #############################
"
"
" 格式化工具
Bundle "Chiel92/vim-autoformat"
" noremap <F8> :Autoformat<CR>
let g:autoformat_verbosemode=1
let g:autoformat_autoindent = 0
" 格式化shell
Bundle 'z0mbix/vim-shfmt', { 'for': 'sh' }
" 根据文件调用不同的插件
function! F8FormatFile()
    if &filetype == 'sh'
        Shfmt -p
    else
        Autoformat
    endif
endfunction
noremap <F8> :call F8FormatFile()<CR>


" ###############################
" 自动补全

" ##### 重量级补全
Bundle 'Valloric/YouCompleteMe'
let g:ycm_key_list_select_completion = ['<Down>', '<Tab>']   " C-j 同时可用
let g:ycm_key_list_previous_completion = ['<Up>']   " C-k 同时可用
let g:ycm_complete_in_comments = 1  "在注释输入中也能补全
let g:ycm_complete_in_strings = 1   "在字符串输入中也能补全
let g:ycm_use_ultisnips_completer = 1 "提示UltiSnips
let g:ycm_always_populate_location_list = 1
let g:ycm_collect_identifiers_from_comments_and_strings = 1   "注释和字符串中的文字也会被收入补全
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_seed_identifiers_with_syntax=1   "语言关键字补全, 不过python关键字都很短，所以，需要的自己打开
let g:ycm_key_detailed_diagnostics = '<leader>d'    " 查看当前光标下标识符的详细信息
let g:ycm_goto_buffer_command = 'new-tab'  " 跳转到定义处,新Tab打开
let g:ycm_error_symbol = '❥✘' "  错误标记 ✗✘☛☛❦❥❤︎ℳ❣❣➤➤➽
let g:ycm_warning_symbol = '❥➤' " 警告符号
nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <leader>] :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <leader>gd :YcmCompleter GoToDeclaration<CR>
nnoremap <leader>[ :YcmCompleter GoToDeclaration<CR>
nmap <leader>e :YcmDiags<CR>
" 引入，可以补全系统，以及python的第三方包 针对新老版本YCM做了兼容
" old version
if !empty(glob("$VIM_TMP_PATH/bundle/YouCompleteMe/cpp/ycm/.ycm_extra_conf.py"))
    let g:ycm_global_ycm_extra_conf = "$VIM_TMP_PATH/bundle/YouCompleteMe/cpp/ycm/.ycm_extra_conf.py"
endif
" new version
if !empty(glob("$VIM_TMP_PATH/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py"))
    let g:ycm_global_ycm_extra_conf = "$VIM_TMP_PATH/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py"
endif
let g:ycm_confirm_extra_conf = 0

Bundle 'tdcdev/ycm_simple_conf'

Bundle 'rizzatti/dash.vim'
map <leader>ds :Dash<cr>

